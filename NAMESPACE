# Generated by roxygen2: do not edit by hand

S3method("[",bgx.DMatrix)
S3method("dimnames<-",bgx.DMatrix)
S3method(dim,bgx.DMatrix)
S3method(dimnames,bgx.DMatrix)
S3method(getinfo,bgx.DMatrix)
S3method(predict,bgx.Booster)
S3method(predict,bgx.Booster.handle)
S3method(print,bgx.Booster)
S3method(print,bgx.DMatrix)
S3method(print,bgx.cv.synchronous)
S3method(setinfo,bgx.DMatrix)
S3method(slice,bgx.DMatrix)
export("bgx.attr<-")
export("bgx.attributes<-")
export("bgx.parameters<-")
export(bgx.Booster.complete)
export(bgx.DMatrix)
export(bgx.DMatrix.save)
export(bgx.attr)
export(bgx.attributes)
export(bgx.create.features)
export(bgx.cv)
export(bgx.dump)
export(bgx.gblinear.history)
export(bgx.ggplot.deepness)
export(bgx.ggplot.importance)
export(bgx.importance)
export(bgx.load)
export(bgx.load.individual)
export(bgx.model.dt.tree)
export(bgx.plot.deepness)
export(bgx.plot.importance)
export(bgx.plot.multi.trees)
export(bgx.plot.shap)
export(bgx.plot.tree)
export(bgx.save)
export(bgx.save.raw)
export(bgx.train)
export(cb.cv.predict)
export(cb.early.stop)
export(cb.evaluation.log)
export(cb.gblinear.history)
export(cb.print.evaluation)
export(cb.reset.parameters)
export(cb.save.model)
export(getinfo)
export(setinfo)
export(slice)
export(tsoobgx)
import(methods)
importClassesFrom(Matrix,dgCMatrix)
importClassesFrom(Matrix,dgeMatrix)
importFrom(Matrix,colSums)
importFrom(Matrix,sparse.model.matrix)
importFrom(Matrix,sparseMatrix)
importFrom(Matrix,sparseVector)
importFrom(Matrix,t)
importFrom(data.table,":=")
importFrom(data.table,as.data.table)
importFrom(data.table,data.table)
importFrom(data.table,is.data.table)
importFrom(data.table,rbindlist)
importFrom(data.table,setkey)
importFrom(data.table,setkeyv)
importFrom(data.table,setnames)
importFrom(grDevices,rgb)
importFrom(graphics,barplot)
importFrom(graphics,grid)
importFrom(graphics,lines)
importFrom(graphics,par)
importFrom(graphics,points)
importFrom(graphics,title)
importFrom(magrittr,"%>%")
importFrom(stats,median)
importFrom(stats,predict)
importFrom(stringi,stri_detect_regex)
importFrom(stringi,stri_match_first_regex)
importFrom(stringi,stri_replace_all_regex)
importFrom(stringi,stri_replace_first_regex)
importFrom(stringi,stri_split_regex)
importFrom(utils,head)
importFrom(utils,object.size)
importFrom(utils,str)
importFrom(utils,tail)
useDynLib(tsoobgx, .registration = TRUE)
